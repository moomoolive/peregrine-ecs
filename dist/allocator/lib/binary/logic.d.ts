export function bitNot(x: any): number;
export function bitAnd(a: any, b: any): number;
export function bitNand(a: any, b: any): number;
export function bitOr(a: any, b: any): number;
export function bitNor(a: any, b: any): number;
export function bitXor(a: any, b: any): number;
export function bitXnor(a: any, b: any): number;
export function bitImply(a: any, b: any): number;
export function bitAoi21(a: any, b: any, c: any): number;
export function bitOai21(a: any, b: any, c: any): number;
export function bitAoi22(a: any, b: any, c: any, d: any): number;
export function bitOai22(a: any, b: any, c: any, d: any): number;
export function bitMux(a: any, b: any, s: any): number;
export function bitDemux(a: any, b: any, s: any): number[];
export function bitNotM(n: any, x: any): any;
export function bitAndM(n: any, a: any, b: any): any;
export function bitNandM(n: any, a: any, b: any): any;
export function bitOrM(n: any, a: any, b: any): any;
export function bitNorM(n: any, a: any, b: any): any;
export function bitXorM(n: any, a: any, b: any): any;
export function bitXnorM(n: any, a: any, b: any): any;
export function bitImplyM(n: any, a: any, b: any): any;
export function bitAoi21M(n: any, a: any, b: any, c: any): any;
export function bitOai21M(n: any, a: any, b: any, c: any): any;
export function bitAoi22M(n: any, a: any, b: any, c: any, d: any): any;
export function bitOai22M(n: any, a: any, b: any, c: any, d: any): any;
export function bitMuxM(n: any, a: any, b: any, s: any): any;
export function bitDemuxM(n: any, a: any, b: any, s: any): any[];
//# sourceMappingURL=logic.d.ts.map